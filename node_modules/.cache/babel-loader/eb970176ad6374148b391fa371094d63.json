{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport var Emitters = /*#__PURE__*/function () {\n  function Emitters(engine, container) {\n    var _this = this;\n    _classCallCheck(this, Emitters);\n    this.container = container;\n    this._engine = engine;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = {\n      random: {\n        count: 1,\n        enable: false\n      },\n      value: []\n    };\n    container.getEmitter = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n    container.addEmitter = function (options, position) {\n      return _this.addEmitter(options, position);\n    };\n    container.removeEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n      if (emitter) {\n        _this.removeEmitter(emitter);\n      }\n    };\n    container.playEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n      if (emitter) {\n        emitter.externalPlay();\n      }\n    };\n    container.pauseEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n      if (emitter) {\n        emitter.externalPause();\n      }\n    };\n  }\n  _createClass(Emitters, [{\n    key: \"addEmitter\",\n    value: function addEmitter(options, position) {\n      var emitterOptions = new Emitter();\n      emitterOptions.load(options);\n      var emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n      this.array.push(emitter);\n      return emitter;\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var _this2 = this;\n      var emitterOptions = this.emitters,\n        modeEmitters = this.interactivityEmitters;\n      if (mode === \"emitter\") {\n        var emittersModeOptions;\n        if (modeEmitters && modeEmitters.value instanceof Array) {\n          if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n            emittersModeOptions = [];\n            var usedIndexes = [];\n            for (var i = 0; i < modeEmitters.random.count; i++) {\n              var idx = arrayRandomIndex(modeEmitters.value);\n              if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                i--;\n                continue;\n              }\n              usedIndexes.push(idx);\n              emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n            }\n          } else {\n            emittersModeOptions = modeEmitters.value;\n          }\n        } else {\n          emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n        }\n        var emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions,\n          ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, function (emitter) {\n          _this2.addEmitter(emitter, ePosition);\n        });\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iterator, _step, emitterOptions;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.emitters = this.container.actualOptions.emitters;\n                this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n                if (this.emitters instanceof Array) {\n                  _iterator = _createForOfIteratorHelper(this.emitters);\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      emitterOptions = _step.value;\n                      this.addEmitter(emitterOptions);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                } else {\n                  this.addEmitter(this.emitters);\n                }\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var emitter = _step2.value;\n          emitter.pause();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var emitter = _step3.value;\n          emitter.play();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function removeEmitter(emitter) {\n      var index = this.array.indexOf(emitter);\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var emitter = _step4.value;\n          emitter.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _iterator5 = _createForOfIteratorHelper(this.array),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var emitter = _step5.value;\n          emitter.update(delta);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }]);\n  return Emitters;\n}();","map":{"version":3,"names":["arrayRandomIndex","executeOnSingleOrMultiple","itemFromArray","Emitter","EmitterInstance","Emitters","engine","container","_engine","array","emitters","interactivityEmitters","random","count","enable","value","getEmitter","idxOrName","undefined","find","t","name","addEmitter","options","position","removeEmitter","emitter","playEmitter","externalPlay","pauseEmitter","externalPause","emitterOptions","load","push","mode","modeEmitters","emittersModeOptions","Array","length","usedIndexes","i","idx","includes","emittersOptions","ePosition","interactivity","mouse","clickPosition","actualOptions","modes","pause","play","index","indexOf","splice","resize","delta","update"],"sources":["C:/Users/nelso/Desktop/nehl react portfolio/node_modules/tsparticles-plugin-emitters/esm/Emitters.js"],"sourcesContent":["import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emittersModeOptions;\n            if (modeEmitters && modeEmitters.value instanceof Array) {\n                if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                    emittersModeOptions = [];\n                    const usedIndexes = [];\n                    for (let i = 0; i < modeEmitters.random.count; i++) {\n                        const idx = arrayRandomIndex(modeEmitters.value);\n                        if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                            i--;\n                            continue;\n                        }\n                        usedIndexes.push(idx);\n                        emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                    }\n                }\n                else {\n                    emittersModeOptions = modeEmitters.value;\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n            }\n            const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n            executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n                this.addEmitter(emitter, ePosition);\n            });\n        }\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}