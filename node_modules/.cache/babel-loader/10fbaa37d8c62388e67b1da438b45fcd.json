{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _toConsumableArray from \"C:/Users/nelso/Desktop/nehl react portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers) {\n  var force = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var res = map.get(container);\n  if (!res || force) {\n    res = _toConsumableArray(initializers.values()).map(function (t) {\n      return t(container);\n    });\n    map.set(container, res);\n  }\n  return res;\n}\nexport var Plugins = /*#__PURE__*/function () {\n  function Plugins(engine) {\n    _classCallCheck(this, Plugins);\n    this._engine = engine;\n    this.plugins = [];\n    this._initializers = {\n      interactors: new Map(),\n      movers: new Map(),\n      updaters: new Map()\n    };\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.drawers = new Map();\n    this.pathGenerators = new Map();\n  }\n  _createClass(Plugins, [{\n    key: \"addInteractor\",\n    value: function addInteractor(name, initInteractor) {\n      this._initializers.interactors.set(name, initInteractor);\n    }\n  }, {\n    key: \"addParticleMover\",\n    value: function addParticleMover(name, initMover) {\n      this._initializers.movers.set(name, initMover);\n    }\n  }, {\n    key: \"addParticleUpdater\",\n    value: function addParticleUpdater(name, initUpdater) {\n      this._initializers.updaters.set(name, initUpdater);\n    }\n  }, {\n    key: \"addPathGenerator\",\n    value: function addPathGenerator(type, pathGenerator) {\n      if (!this.getPathGenerator(type)) {\n        this.pathGenerators.set(type, pathGenerator);\n      }\n    }\n  }, {\n    key: \"addPlugin\",\n    value: function addPlugin(plugin) {\n      if (!this.getPlugin(plugin.id)) {\n        this.plugins.push(plugin);\n      }\n    }\n  }, {\n    key: \"addPreset\",\n    value: function addPreset(presetKey, options) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (override || !this.getPreset(presetKey)) {\n        this.presets.set(presetKey, options);\n      }\n    }\n  }, {\n    key: \"addShapeDrawer\",\n    value: function addShapeDrawer(types, drawer) {\n      var _this = this;\n      executeOnSingleOrMultiple(types, function (type) {\n        if (!_this.getShapeDrawer(type)) {\n          _this.drawers.set(type, drawer);\n        }\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(container) {\n      this.updaters.delete(container);\n      this.movers.delete(container);\n      this.interactors.delete(container);\n    }\n  }, {\n    key: \"getAvailablePlugins\",\n    value: function getAvailablePlugins(container) {\n      var res = new Map();\n      var _iterator = _createForOfIteratorHelper(this.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n          if (!plugin.needsPlugin(container.actualOptions)) {\n            continue;\n          }\n          res.set(plugin.id, plugin.getPlugin(container));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return res;\n    }\n  }, {\n    key: \"getInteractors\",\n    value: function getInteractors(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n  }, {\n    key: \"getMovers\",\n    value: function getMovers(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n  }, {\n    key: \"getPathGenerator\",\n    value: function getPathGenerator(type) {\n      return this.pathGenerators.get(type);\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(plugin) {\n      return this.plugins.find(function (t) {\n        return t.id === plugin;\n      });\n    }\n  }, {\n    key: \"getPreset\",\n    value: function getPreset(preset) {\n      return this.presets.get(preset);\n    }\n  }, {\n    key: \"getShapeDrawer\",\n    value: function getShapeDrawer(type) {\n      return this.drawers.get(type);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return this.drawers.keys();\n    }\n  }, {\n    key: \"getUpdaters\",\n    value: function getUpdaters(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, sourceOptions) {\n      var _iterator2 = _createForOfIteratorHelper(this.plugins),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var plugin = _step2.value;\n          plugin.loadOptions(options, sourceOptions);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"loadParticlesOptions\",\n    value: function loadParticlesOptions(container, options) {\n      var updaters = this.updaters.get(container);\n      if (!updaters) {\n        return;\n      }\n      for (var _len = arguments.length, sourceOptions = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        sourceOptions[_key - 2] = arguments[_key];\n      }\n      var _iterator3 = _createForOfIteratorHelper(updaters),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n          if (updater.loadOptions) {\n            updater.loadOptions.apply(updater, [options].concat(sourceOptions));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n  return Plugins;\n}();","map":{"version":3,"names":["executeOnSingleOrMultiple","getItemsFromInitializer","container","map","initializers","force","res","get","values","t","set","Plugins","engine","_engine","plugins","_initializers","interactors","Map","movers","updaters","presets","drawers","pathGenerators","name","initInteractor","initMover","initUpdater","type","pathGenerator","getPathGenerator","plugin","getPlugin","id","push","presetKey","options","override","getPreset","types","drawer","getShapeDrawer","delete","needsPlugin","actualOptions","find","preset","keys","sourceOptions","loadOptions","updater"],"sources":["C:/Users/nelso/Desktop/nehl react portfolio/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js"],"sourcesContent":["import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            if (!this.getShapeDrawer(type)) {\n                this.drawers.set(type, drawer);\n            }\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}